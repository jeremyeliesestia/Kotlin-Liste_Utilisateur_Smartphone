// Generated by view binder compiler. Do not edit!
package com.example.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.todolist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewtaskActivityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText assignee;

  @NonNull
  public final Button btnTask;

  @NonNull
  public final EditText date;

  @NonNull
  public final EditText description;

  @NonNull
  public final EditText requested;

  @NonNull
  public final EditText task;

  private NewtaskActivityBinding(@NonNull LinearLayout rootView, @NonNull EditText assignee,
      @NonNull Button btnTask, @NonNull EditText date, @NonNull EditText description,
      @NonNull EditText requested, @NonNull EditText task) {
    this.rootView = rootView;
    this.assignee = assignee;
    this.btnTask = btnTask;
    this.date = date;
    this.description = description;
    this.requested = requested;
    this.task = task;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewtaskActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewtaskActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.newtask_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewtaskActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.assignee;
      EditText assignee = ViewBindings.findChildViewById(rootView, id);
      if (assignee == null) {
        break missingId;
      }

      id = R.id.btnTask;
      Button btnTask = ViewBindings.findChildViewById(rootView, id);
      if (btnTask == null) {
        break missingId;
      }

      id = R.id.date;
      EditText date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.description;
      EditText description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.requested;
      EditText requested = ViewBindings.findChildViewById(rootView, id);
      if (requested == null) {
        break missingId;
      }

      id = R.id.task;
      EditText task = ViewBindings.findChildViewById(rootView, id);
      if (task == null) {
        break missingId;
      }

      return new NewtaskActivityBinding((LinearLayout) rootView, assignee, btnTask, date,
          description, requested, task);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
